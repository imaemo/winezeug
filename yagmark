#!/bin/sh
# Yet Another Graphics Benchmark
# Automated script to measure Win32 graphics performance
# Copyright 2010 Dan Kegel.
# Licence: LGPL (for winehq compatibility)

# TODO: make these work on Windows, too.  For now use abbreviated, wine-only settings.
WINE="${WINE:-wine}"
WINEPREFIX="${WINEPREFIX:-$HOME/.wine-yagmark}"
DRIVE_C="$WINEPREFIX/drive_c"
programfilesdir_x86_unix="$DRIVE_C/Program Files"
YAGMARK_TMP="$DRIVE_C"/yagmarktmp
YAGMARK_TMP_WIN='c:\yagmarktmp'

rm -rf "$YAGMARK_TMP"
mkdir -p "$YAGMARK_TMP"

#----------------------------------------------------------------

ahk_do() {
   echo "$@" | sed "s/\$//" > "$YAGMARK_TMP"/tmp.ahk
   cd "$programfilesdir_x86_unix"/AutoHotkey
   $WINE "AutoHotkey.exe" "$YAGMARK_TMP"/tmp.ahk
   cd "$olddir"
}

#----------------------------------------------------------------

run_3dmark2000()
{
    exe_dir="$programfilesdir_x86_unix/MadOnion.com/3DMark2000"
    rm -f "$YAGMARK_TMP"/3dmark2000.txt

    # Install if needed
    if ! test -f "$exe_dir/3DMark2000.exe"
    then
        sh wisotool 3dmark2000
    fi
    cd "$exe_dir"
    ahk_do "
        SetTitleMatchMode, 2
        run, 3DMark2000.exe
        winwait, 3DMark2000, Welcome
        Send B
        winwait, Overall Score, Congratulations
        ControlClick, Button7, Overall Score, Congratulations
        winactivate, 3DMark2000
        sleep 500
        send ^s
        winwait, Save As
        send {DEL 8}
        send $YAGMARK_TMP_WIN\\\\3dmark2000
        send !t3
        send {Enter}
        sleep 500
        send !fx
        sleep 1000
        send n
        WinClose
        send {Enter}
        "
    cat "$YAGMARK_TMP"/3dmark2000.txt
}

run_3dmark2001()
{
    exe="$programfilesdir_x86_unix/MadOnion.com/3DMark2001 SE/3DMark2001SE.exe"
    # Install if needed
    if ! test -f "$exe"
    then
        sh wisotool 3dmark2001
    fi

    # Use Autohotkey to start app, click 'custom', 'Change', clear all, select 
    # just one test, 'ok', 'Benchmark', wait for it to finish, then click Details...
    # and scrape results from non-copyable syslist in dialog.
    $WINE "$exe"
}

run_3dmark06()
{
    exe="$programfilesdir_x86_unix/Futuremark/3DMark6/3DMark06.exe"
    # Install if needed
    if ! test -f "$exe"
    then
        sh wisotool 3dmark2006
    fi

    # Use Autohotkey to start app, click 'custom', 'Change', clear all, select 
    # just one test, 'ok', 'Benchmark', wait for it to finish, then click Details...
    # and scrape results from non-copyable syslist in dialog.
    $WINE "$exe"
}

run_re5bench()
{
    exedir="$programfilesdir_x86_unix/CAPCOM/RESIDENT EVIL 5 Benchmark Version"
    exe="$exedir/RE5DX9.EXE"

    # Install if needed
    if ! test -f "$exe"
    then
        sh wisotool re5bench
    fi

    # Can this be scraped/controlled at all with autohotkey?  Maybe if run in window...
    cd "$exedir"
    $WINE "$exe"
}

run_unigine_heaven()
{
    exedir="$programfilesdir_x86_unix/Unigine/Heaven"
    exe="$exedir/Heaven_d3d9.bat"
    commandline="cmd /c Heaven_d3d9.bat"

    # Install if needed
    if ! test -f "$exe"
    then
        sh wisotool unigine_heaven
    fi

    # Can this be scraped/controlled at all with autohotkey?  Maybe if run in window...
    cd "$exedir"
    $WINE $commandline
}

do_report() {
    echo ">-------- begin yagmark report ---------"
    echo "> hostname"
    hostname

    echo "> uname -a"
    uname -a

    echo "> echo $WINE"
    echo $WINE

    echo "> $WINE --version"
    $WINE --version

    echo "> cat /etc/issue"
    cat /etc/issue

    echo "> cat /proc/cpuinfo"
    cat /proc/cpuinfo

    echo "> lspci | grep VGA"
    lspci | grep VGA 

    echo "> glxinfo | egrep 'vendor|renderer|version'"
    glxinfo | egrep 'vendor|renderer|version'

    cd "$YAGMARK_TMP"
    pwd
    ls
    for file in *.txt
    do
       echo "> cat $file"
       cat "$file"
    done
    echo ">-------- end yagmark report ---------"
}

# TODO: add a wisotool-style menu
run_$1
do_report > yagmark-`hostname`-`date +%F`.txt

